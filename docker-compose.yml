services:
  postgres:
    image: postgres:17
    container_name: postgres
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports: 
      - ${RABBITMQ_PORT}:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  orders:
    build: ../orders
    depends_on:
      rabbitmq:
          condition: service_healthy
      postgres:
          condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}
    restart: unless-stopped
    command: npm run start:dev
    volumes:
      - ../infrastructure/protos:/usr/src/app/src/protos
    networks:
      - app-network

  products:
    build: ../products
    depends_on:
      rabbitmq:
          condition: service_healthy
      postgres:
          condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}
    volumes:
      - ../infrastructure/protos:/usr/src/app/src/protos
    restart: unless-stopped
    command: npm run start:dev
    networks:
      - app-network

  api-gateway:
    build: ../api-gateway
    depends_on:
      rabbitmq:
          condition: service_healthy
      postgres:
          condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}
      PORT: 3000
      NODE_ENV: development
    restart: unless-stopped
    command: npm run start:dev
    develop:
      watch:
        - action: sync
          path: ./api-gateway/src
          target: /usr/src/app
          ignore:
            - node_modules/ 
    volumes:
      - ../infrastructure/protos:/usr/src/app/src/protos/
    ports:
      - 3000:3000
    networks:
      - app-network

  customers:
    build: ../customers
    depends_on:
      rabbitmq:
          condition: service_healthy
      postgres:
          condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}
    restart: unless-stopped
    command: sh -c "npm run migrate:generate && npm run migrate && npm run seeds && npm run start:dev"
    volumes:
      - ../infrastructure/protos:/usr/src/app/src/protos/
    networks:
      - app-network

volumes:
  rabbitmq_data:
  postgres_data:

networks:
  app-network:
    driver: bridge